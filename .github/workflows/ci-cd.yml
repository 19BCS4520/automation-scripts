name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install flake8
        run: pip install flake8
      - name: Lint code
        run: flake8 .

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: python -m unittest discover tests/unit

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run integration tests
        run: python -m unittest discover tests/integration

  deploy:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Environment
        run: |
          echo "Deploying to environment: ${{ github.ref }}"
          if [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "‚úÖ Deploying to Development Server"
            # Add development deployment commands here
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "üöÄ Deploying to Staging Server"
            # Add staging deployment commands here
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "üö® Deploying to Production Server"
            # Add production deployment commands here
          fi

  notify-on-failure:
    if: failure()
    needs: [lint, unit-test, integration-test, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå CI/CD pipeline failed in one of the stages. Please check GitHub Actions."
